services:
  # Servicio de la base de datos MongoDB
  mongo:
    image: mongo:7.0
    container_name: social_db
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=socialnetwork
    volumes:
      - mongo-data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d:ro
    networks:
      - social-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/socialnetwork --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Servicio Backend (API REST)
  backend:
    build: ./backend
    container_name: social_backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - MONGODB_URI=mongodb://mongo:27017/socialnetwork
      - JWT_SECRET=your-secret-key-here
      - CORS_ORIGIN=http://localhost:3000
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./uploads:/app/uploads
    networks:
      - social-network
    depends_on:
      mongo:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Servicio Frontend (React)
  frontend:
    build: ./frontend
    container_name: social_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:3001
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - social-network
    depends_on:
      backend:
        condition: service_healthy
    stdin_open: true
    tty: true

volumes:
  mongo-data:

networks:
  social-network:
    driver: bridge


